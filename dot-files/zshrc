# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh
# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="terst"

# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# Set to this to use case-sensitive completion
# CASE_SENSITIVE="true"

# Comment this out to disable weekly auto-update checks
# DISABLE_AUTO_UPDATE="true"

# Uncomment following line if you want to disable colors in ls
# DISABLE_LS_COLORS="true"

# Uncomment following line if you want to disable autosetting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want red dots to be displayed while waiting for completion
# COMPLETION_WAITING_DOTS="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(git svn)

source $ZSH/oh-my-zsh.sh

# Customize to your needs...
export EDITOR=vim
export TERM=xterm-256color
export PAGER="less -R"
SUDO='sudo'
if [ "$USER" = "root" ]; then
    SUDO=''
fi

# Apache sites
es () {
    $SUDO vim /etc/apache2/sites-available/$1.terst.org && $SUDO apache2ctl restart
}
ns () {
    $SUDO vim /etc/apache2/sites-available/$1.terst.org +":0r /etc/apache2/sites-available/template" +":%s/DEFAULT/$1/g"
    if [ $? -eq 0 ]; then
        $SUDO mkdir -p /workspace/sites/$1.terst.org/docroot
        $SUDO ln -s /workspace/sites/$1.terst.org /var/www/htdocs/$1.terst.org
        $SUDO a2ensite $1.terst.org
        $SUDO apache2ctl restart
        echo "http://$1.terst.org/ is active."
    else
        echo "cancelled...."
    fi
}
# xkcd.com/149
mmas ()
{
    echo "What? Make it yourself."
    echo "-> $SUDO $(history|tail -1|awk '{$1="";print}')"
    echo "Ok."
    $SUDO $(history|tail -1|awk '{$1="";print}')
}
tlog () {
    if [ -z "$1" ]; then
        tail -fn0 "/var/log/apache2/*"
    else
        tail -fn0 /var/log/apache2/{$1.access,error,rewrite}.log
    fi
}
cdls () {
    \cd $1
    # interpolating LS_OPTS at runtime is weird...
    ls -thG | head -3 | sed 's/^/    /'
}

[ -e ~/.zshrc-local ] && source ~/.zshrc-local


#### OS- or distribution-dependent...
ARCH=false
DEBIAN=false
MAC=false

if [ "$(uname)" = "Darwin" ]; then
    MAC=true
else
    if [ -e /etc/arch-release ]; then
        ARCH=true
    else
        if [ -e /etc/debian_version ]; then
            DEBIAN=true
        fi
    fi
fi

if $ARCH; then
    alias get="$SUDO pacman -S"
    alias agu="$SUDO pacman -Syu"
    alias acs="$SUDO pacman -Ss"
fi
if $DEBIAN; then
    alias get="$SUDO apt-get install"
    alias agu="$SUDO apt-get update; $SUDO apt-get upgrade; $SUDO apt-get dist-upgrade"
    alias acs="apt-cache search"
fi
if $MAC; then
    alias get="brew install"
    alias agu="brew update && brew upgrade"
    alias acs="brew search"

    # Mac UNIX utils aren't GNU
    export LS_OPTS="-h -G"
    export TREE_OPTS="-Ch"
else
    export LS_OPTS="-I '*.pyc' -h --color=auto --group-directories-first"
    export TREE_OPTS="-I '*.pyc' -Ch --filelimit 20"
fi


alias apres="$SUDO apache2ctl restart"
alias cd=cdls
hist () {
    awk '{print $1 " " $2 }' <~/.histfile |
    sort |
    uniq -c |
    sort -nr |
    head
}
alias cmi="$SUDO date && ./configure \$CONF && make && make test && $SUDO make install && make clean && date"
alias histc="rm -rf ~/.lesshst ~/.histfile ~/.viminfo ~/.mysql_history ~/.zcompdump ~/.bash_history ~/.DS_Store ~/.Xauthority ~/.cache ~/.sqlite_history"
alias ll='ls -lA' # long listing, + hidden
alias ls="ls $LS_OPTS"
alias pu='phpunit --verbose --colors'
alias p='clear;phpunit --verbose --colors --coverage-text=._phpcov . && cat ._phpcov;rm ._phpcov'
alias rc='vim ~/.zshrc && source ~/.zshrc'
alias rcl='vim ~/.zshrc-local && source ~/.zshrc-local'
alias so="source ~/.zshrc"
alias tailf="tail -fn0"
alias tree="tree $TREE_OPTS"

# homebrew puts things is /usr/local/bin, make sure that's before /usr/bin
export PATH="/usr/local/bin:$PATH"
export PATH="$HOME/bin:$PATH"
[ -d $HOME/pear/bin ] && export PATH="$PATH:$HOME/pear/bin" && alias pear="$SUDO pear"
export PATH="$PATH:/Users/pstone/code/home-sync/bin" # added by home-sync
