#!/bin/zsh

# We're located in bin/
ROOT=$(cd $(dirname $(dirname $0)); pwd)

main() {
  #clear out our backups
  rm -rf $ROOT/backups; mkdir $ROOT/backups

  # update the repo and load submodules
  updateAndLoadSubmodules

  # replace our config files
  for file in $(ls $ROOT/dot-files); do
    echo "Updating [0;32m$file[0m..."
    backupAndReplace $file
  done

  #if [ -z "$(grep 'added by home-sync' ~/.zshrc)" ]; then
  #  echo "export PATH=\"\$HOME/bin:$ROOT/bin:\$PATH\" # added by home-sync" >> ~/.zshrc
  #  echo "~/.zsrhc updated - source it to apply changes."
  #fi

  # Check settings
  verify
}

backupAndReplace() {
  if [ -e $HOME/.$1 ]; then
    DIFF=$(diff -q $HOME/.$1 $ROOT/dot-files/$1)
    if [ $DIFF ]; then
      echo "Updating [0;32m$1[0m..."
      mv $HOME/.$1 $ROOT/backups/$1
      ln -s $ROOT/dot-files/$1 $HOME/.$1
    fi
  else
    # this needs to be forced because -e returns false for a dangling symlink
    echo "Adding [0;32m$1[0m..."
    ln -sf $ROOT/dot-files/$1 $HOME/.$1
  fi
}

updateAndLoadSubmodules() {
  which git >/dev/null
  if [ 0 -ne "$?" ]; then
    echo "Git doesn't appear to be installed, vim plugins won't be loaded"
  else
    cd $ROOT
    git submodule init
    git submodule update
  fi
}

verify() {
  which zsh >/dev/null && finger $USER|grep bin/zsh >/dev/null 
  if [ 0 -ne "$?" ]; then
    echo "Zsh is not your shell, shell bindings won't work."
  fi

}


main
